name: eShopOnWeb Build and Test

#Triggers (uncomment line below to use it)
on: workflow_dispatch

#Environment variables https://docs.github.com/en/actions/learn-github-actions/environment-variables
env:
  RESOURCE-GROUP: rg-eshoponweb-eastus
  LOCATION: eastus
  SUBSCRIPTION-ID: e36a3dde-b34b-42e4-aab7-f8fa0ca79452
  WEBAPP-NAME: devops-webapp-eastus-<new-random>


jobs:
  buildandtest:
    runs-on: ubuntu-latest
    env:
      # Scope the .bicep path to THIS job only so deploy never sees it
      TEMPLATE-FILE: infra/webapp.bicep
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.415'

      - name: Clear NuGet cache
        run: dotnet nuget locals all --clear

      - name: dotnet --info
        run: dotnet --info

      # Optional: remove non-SDK project from solution to avoid TFM issues in CI
      - name: Remove docker-compose from solution (CI-only)
        run: |
          if dotnet sln eShopOnWeb.sln list | grep -q "docker-compose.dcproj"; then
            dotnet sln eShopOnWeb.sln remove docker-compose.dcproj
          fi

      - name: Restore
        run: dotnet restore ./eShopOnWeb.sln

      - name: Build
        run: dotnet build ./eShopOnWeb.sln -c Release

      - name: Test
        run: dotnet test ./eShopOnWeb.sln -c Release

      - name: Publish web app (zip)
        run: |
          dotnet publish ./src/Web/Web.csproj -c Release -o ${{env.DOTNET_ROOT}}/myapp
          cd ${{env.DOTNET_ROOT}}/myapp
          zip -r ../app.zip .

      - name: Upload published app
        uses: actions/upload-artifact@v4
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/app.zip

      # Compile Bicep -> JSON in the build job (no Azure login needed)
      - name: Build Bicep to ARM JSON
        run: |
          dotnet tool install -g Bicep.Net.Cli || true
          ~/.dotnet/tools/bicep --version
          ~/.dotnet/tools/bicep build "${{ env.TEMPLATE-FILE }}" --out infra/webapp.json

      - name: Upload ARM template
        uses: actions/upload-artifact@v4
        with:
          name: arm-template
          path: infra/webapp.json

  deploy:
    runs-on: ubuntu-latest
    needs: buildandtest
    environment:
      name: Development
    steps:
      - name: Download published app
        uses: actions/download-artifact@v4
        with:
          name: .net-app
          path: .net-app

      - name: Download ARM template
        uses: actions/download-artifact@v4
        with:
          name: arm-template
          path: arm-template

      # Make sure no step in this job sees a .bicep path via env
      - name: Clear TEMPLATE-FILE for this job
        run: echo "TEMPLATE-FILE=" >> $GITHUB_ENV

      # Quick guard & debug (optional)
      - name: Assert no .bicep references in this job
        run: |
          set -e
          printenv | grep -i '\.bicep' && { echo "ERROR: .bicep leaked into env"; exit 1; } || true
          grep -R --line-number --include="*.yml" "\.bicep" .github/workflows || true
          ls -al arm-template
          head -n 20 arm-template/webapp.json
          file arm-template/webapp.json

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Validate + deploy the JSON with arm-deploy (no Azure CLI container, no Bicep)
      - name: Validate & Deploy ARM JSON
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ env.SUBSCRIPTION-ID }}
          resourceGroupName: ${{ env.RESOURCE-GROUP }}
          template: arm-template/webapp.json
          parameters: |
            webAppName=${{ env.WEBAPP-NAME }}
            location=${{ env.LOCATION }}
          deploymentName: eshoponweb-${{ github.run_id }}
          failOnStdErr: false
          additionalArguments: --only-show-errors

      # Publish the zip to the Web App (no Azure CLI container needed for Bicep)
      - name: Publish Website to WebApp
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP-NAME }}
          package: .net-app/app.zip
          type: zip
