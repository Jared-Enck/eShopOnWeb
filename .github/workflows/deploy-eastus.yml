name: Deploy EastUS (from latest successful build)

on: workflow_dispatch

env:
  RESOURCE-GROUP: rg-eshoponweb-eastus
  LOCATION: eastus
  SUBSCRIPTION-ID: e36a3dde-b34b-42e4-aab7-f8fa0ca79452
  WEBAPP-NAME: devops-webapp-eastus-2634623321

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # --- Get artifacts from the latest successful run of your build workflow ---
      # Use the *file name* of your build workflow (recommended)
      - name: Download .net-app (zip) from latest successful build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: deploy-eastus.yml      # << update if your build workflow file is named differently
          workflow_conclusion: success
          name: .net-app                     # must match the upload name in the build workflow
          path: .net-app
          branch: main

      - name: Download Bicep artifact from latest successful build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: deploy-eastus.yml
          workflow_conclusion: success
          name: bicep-template               # matches the upload name you already have
          path: bicep-template
          branch: main

      # --- Compile Bicep -> ARM JSON without using azure/cli ---
      - name: Build Bicep -> ARM JSON (no az CLI)
        uses: docker://mcr.microsoft.com/azure-bicep:latest
        with:
          args: >
            /bin/sh -lc "
            mkdir -p arm-template &&
            bicep --version &&
            bicep build bicep-template/webapp.bicep --out arm-template/webapp.json &&
            ls -al arm-template &&
            head -n 20 arm-template/webapp.json
            "

      # --- Azure login ---
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # --- Validate + deploy the JSON (no Bicep dependency here) ---
      - name: Validate & Deploy ARM JSON
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ env.SUBSCRIPTION-ID }}
          resourceGroupName: ${{ env.RESOURCE-GROUP }}
          template: arm-template/webapp.json
          parameters: |
            webAppName=${{ env.WEBAPP-NAME }}
            location=${{ env.LOCATION }}
          deploymentName: eshoponweb-${{ github.run_id }}
          failOnStdErr: false
          additionalArguments: --only-show-errors

      # --- Push the ZIP to the Web App ---
      - name: Publish Website to WebApp
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP-NAME }}
          package: .net-app/app.zip
          type: zip
