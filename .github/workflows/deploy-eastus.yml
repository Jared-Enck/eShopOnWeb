name: Deploy EastUS (from latest successful build)

on: workflow_dispatch

env:
  RESOURCE-GROUP: rg-eshoponweb-eastus
  LOCATION: eastus
  SUBSCRIPTION-ID: e36a3dde-b34b-42e4-aab7-f8fa0ca79452
  WEBAPP-NAME: devops-webapp-eastus-2634623321

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # ⬇️ Option B: download artifacts from another workflow's latest successful run
      # Use the *file name* of your build workflow for best reliability.
      - name: Download .net-app (zip) from latest successful build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: eshoponweb-cicd.yml     # <-- OR the exact file name of your build workflow
          workflow_conclusion: success
          name: .net-app                    # <-- must match the upload name in the build workflow
          path: .net-app
          branch: main

      - name: Download ARM template (JSON) from latest successful build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: eshoponweb-cicd.yml     # <-- same as above
          workflow_conclusion: success
          name: arm-template                 # <-- must match the upload name
          path: arm-template
          branch: main

      # (Optional) quick sanity check
      - name: Verify artifacts
        run: |
          ls -al .net-app || true
          ls -al arm-template || true
          file arm-template/webapp.json || true
          head -n 20 arm-template/webapp.json || true

      # Azure login (same subscription as your env)
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Deploy the JSON (no Bicep, no CLI needed)
      - name: Validate & Deploy ARM JSON
        uses: azure/arm-deploy@v2
        with:
          subscriptionId: ${{ env.SUBSCRIPTION-ID }}
          resourceGroupName: ${{ env.RESOURCE-GROUP }}
          template: arm-template/webapp.json
          parameters: |
            webAppName=${{ env.WEBAPP-NAME }}
            location=${{ env.LOCATION }}
          deploymentName: eshoponweb-${{ github.run_id }}
          failOnStdErr: false
          additionalArguments: --only-show-errors

      # Push the ZIP to App Service
      - name: Publish Website to WebApp
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP-NAME }}
          package: .net-app/app.zip
          type: zip
