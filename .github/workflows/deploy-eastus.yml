name: Deploy EastUS (from latest successful build)

on: workflow_dispatch

env:
  RESOURCE-GROUP: rg-eshoponweb-eastus
  LOCATION: eastus
  SUBSCRIPTION-ID: e36a3dde-b34b-42e4-aab7-f8fa0ca79452
  WEBAPP-NAME: devops-webapp-eastus-2634623321

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # 1) Pull artifacts from the latest successful run of your build workflow
      - name: Download .net-app (zip) from latest successful build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: eshoponweb-cicd.yml         # <-- your build workflow file name
          workflow_conclusion: success
          name: .net-app                        # <-- must match upload name
          path: .net-app
          branch: main

      - name: Download Bicep artifact from latest successful build
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: eshoponweb-cicd.yml
          workflow_conclusion: success
          name: bicep-template                   # <-- must match upload name
          path: bicep-template
          branch: main

      # (Optional) sanity check
      - name: Verify artifacts
        run: |
          ls -al .net-app || true
          ls -al bicep-template || true

      # 2) Install standalone Bicep CLI (no az CLI, no Docker)
      - name: Install Bicep CLI (standalone)
        shell: bash
        run: |
          set -e
          mkdir -p "$HOME/.local/bin"
          curl -sSLf -o "$HOME/.local/bin/bicep" \
            https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x "$HOME/.local/bin/bicep"
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
          bicep --version

      # 3) Build Bicep -> ARM JSON
      - name: Build Bicep -> ARM JSON
        shell: bash
        run: |
          set -e
          mkdir -p arm-template
          bicep build bicep-template/webapp.bicep --outfile arm-template/webapp.json
          ls -al arm-template
          head -n 20 arm-template/webapp.json


      # 4) Azure login
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 5) Validate + deploy the JSON (no Bicep dependency here)
      - name: Validate & Deploy ARM JSON
        uses: azure/arm-deploy@v2
        with:
          scope: resourcegroup
          subscriptionId: ${{ env.SUBSCRIPTION-ID }}
          resourceGroupName: ${{ env.RESOURCE-GROUP }}
          template: arm-template/webapp.json
          parameters: |
            webAppName=${{ env.WEBAPP-NAME }}
            location=${{ env.LOCATION }}
          deploymentName: eshoponweb-${{ github.run_id }}


      # 6) Push the ZIP to the Web App
      - name: Publish Website to WebApp
        uses: Azure/webapps-deploy@v3
        with:
          app-name: ${{ env.WEBAPP-NAME }}
          package: .net-app/app.zip
          type: zip
